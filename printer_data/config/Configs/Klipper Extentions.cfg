#####################################################################

# 	Klipper Modifications & Extentions
#####################################################################

[skew_correction]

# [rounded_path]
# resolution: 0.2 # the length of a circle approximation segments.
# replace_g0: False # Use at your own risk

#:::::::::::::::::::::::::

[gcode_arcs]
resolution: 0.1
#   An arc will be split into segments. Each segment's length will equal the resolution in mm set above. 
#   Lower values will produce a finer arc, but also more work for your machine. 
#   Arcs smaller than the configured value will become straight lines.

#:::::::::::::::::::::::::

[respond]

#:::::::::::::::::::::::::

[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

#:::::::::::::::::::::::::

[pause_resume]

#:::::::::::::::::::::::::

[gcode_macro _M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#:::::::::::::::::::::::::

# [firmware_retraction]
# #retract_length: 0
# #   The length of filament (in mm) to retract when G10 is activated,
# #   and to unretract when G11 is activated (but see
# #   unretract_extra_length below). The default is 0 mm.
# #retract_speed: 20
# #   The speed of retraction, in mm/s. The default is 20 mm/s.
# #unretract_extra_length: 0
# #   The length (in mm) of *additional* filament to add when
# #   unretracting.
# #unretract_speed: 10
# #   The speed of unretraction, in mm/s. The default is 10 mm/s.
